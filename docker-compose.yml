services:
  llm_server:
    container_name: llm_server
    build:
      context: llm_server
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./llm_server/config/config.json:/app/llm_server/config/config.json
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - ZHIPU_API_KEY=${ZHIPU_API_KEY}
      - LLAMA_API_KEY=${LLAMA_API_KEY}
    depends_on:
      - database
    networks:
      - internal_net
    restart: unless-stopped

  database:
    image: postgres:17.3
    container_name: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - internal_net
    restart: unless-stopped

  postgrest:
    build:
      context: postgrest
      dockerfile: Dockerfile
    container_name: postgrest
    volumes:
      - ./postgrest/postgrest.conf:/etc/postgrest.conf:ro
      - ./postgrest/server.crt:/etc/ssl/server.crt:ro
      - ./postgrest/server.key:/etc/ssl/server.key:ro
    ports:
      - "443:443"
    depends_on:
      - database
    networks:
      - internal_net
    restart: unless-stopped

  lavalink:
    image: ghcr.io/lavalink-devs/lavalink:4
    container_name: lavalink
    pull_policy: always
    volumes:
      - ./lavalink/application.yml:/opt/Lavalink/application.yml:ro
      - ./lavalink/plugins/:/opt/Lavalink/plugins/
    environment:
      - _JAVA_OPTIONS=-Xmx6G
      - SERVER_PORT=${LAVALINK_PORT}
      - LAVALINK_SERVER_PASSWORD=${LAVALINK_PASSWORD}
    ports:
      - "2333:2333"
    networks:
      - internal_net
    restart: unless-stopped

  bot:
    build:
      context: bot
      dockerfile: docker/Dockerfile
      args:
        INSTALL_DPP_METHOD: source
    container_name: bot
    depends_on:
      - database
      - llm_server
      - postgrest
      - prometheus
      - grafana
    networks:
      - internal_net
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - LAVALINK_PASSWORD=${LAVALINK_PASSWORD}
      - LAVALINK_PORT=${LAVALINK_PORT}
      - BOT_TOKEN=${BOT_TOKEN}
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/grafana.yml:ro
    ports:
      - "3000:3000"
    restart: unless-stopped

networks:
  internal_net:

volumes:
  db_data:
